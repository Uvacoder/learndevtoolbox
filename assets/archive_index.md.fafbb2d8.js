import{_ as e,o as i,c as t,a as n}from"./app.1377345a.js";const _=JSON.parse('{"title":"Archive \u{1F5C2}","description":"","frontmatter":{},"headers":[{"level":3,"title":"Concept definitions","slug":"concept-definitions","link":"#concept-definitions","children":[]},{"level":3,"title":"Code smells","slug":"code-smells","link":"#code-smells","children":[]},{"level":3,"title":"Patterns","slug":"patterns","link":"#patterns","children":[]},{"level":3,"title":"Refactoring","slug":"refactoring","link":"#refactoring","children":[]}],"relativePath":"archive/index.md","lastUpdated":1665679775000}'),a={name:"archive/index.md"},r=n('<h1 id="archive-\u{1F5C2}" tabindex="-1">Archive \u{1F5C2} <a class="header-anchor" href="#archive-\u{1F5C2}" aria-hidden="true">#</a></h1><p>The archive is a place where you can find a list of different <strong>code smells</strong>, <strong>patterns</strong>, <strong>refactoring techniques</strong> and <strong>definitions</strong>.</p><p>Usually you fill find <strong>code examples</strong> along the way to help you understand everything.</p><p>So, what are you looking for?</p><h3 id="concept-definitions" tabindex="-1">Concept definitions <a class="header-anchor" href="#concept-definitions" aria-hidden="true">#</a></h3><ul><li><a href="./concepts-definitions/abstraction/">Abstraction</a></li><li><a href="./concepts-definitions/encapsulation/">Encapsulation</a></li><li><a href="./concepts-definitions/domain-model/">Domain model</a></li></ul><h3 id="code-smells" tabindex="-1">Code smells <a class="header-anchor" href="#code-smells" aria-hidden="true">#</a></h3><ul><li><a href="./code-smells/primitive-obsession/">Primitive obsession</a></li></ul><h3 id="patterns" tabindex="-1">Patterns <a class="header-anchor" href="#patterns" aria-hidden="true">#</a></h3><ul><li><a href="./patterns/criteria/">Criteria</a></li></ul><h3 id="refactoring" tabindex="-1">Refactoring <a class="header-anchor" href="#refactoring" aria-hidden="true">#</a></h3>',11),s=[r];function o(l,c,d,h,f,p){return i(),t("div",null,s)}const g=e(a,[["render",o]]);export{_ as __pageData,g as default};
